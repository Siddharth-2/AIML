CREATE DATABASE RMD;
USE RMD;

CREATE TABLE sales (
product_id INT,
category_id INT,
sale_date DATE,
amount DECIMAL(10, 2)
);

INSERT INTO sales VALUES
(1, 1, '2022-01-01', 100.00),
(2, 1, '2022-01-01', 150.00),
(1, 2, '2022-01-01', 200.00),
(2, 2, '2022-01-01', 120.00),
(1, 1, '2022-01-02', 80.00),
(2, 1, '2022-01-02', 180.00),
(1, 2, '2022-01-02', 220.00),
(2, 2, '2022-01-02', 100.00);

-- ROLLUP QUERY

SELECT 
    category_id,
    sale_date,
    SUM(amount) AS total_sales
FROM 
    sales
GROUP BY 
    category_id, sale_date WITH ROLLUP;

-- FIRST (MIN) QUERY

SELECT category_id, MIN(sale_date) AS first_sale_date
FROM sales
GROUP BY category_id;

-- FIRST (MAX) QUERY

SELECT category_id, MAX(sale_date) AS last_sale_date
FROM sales
GROUP BY category_id;

-- RANK QUERY
SELECT product_id, SUM(amount) AS total_sales, RANK() OVER (ORDER BY
SUM(amount) DESC) AS sales_rank
FROM sales
GROUP BY product_id;

-- DENSE-RANK QUERY

SELECT product_id, SUM(amount) AS total_sales, DENSE_RANK() OVER (ORDER BY
SUM(amount) DESC) AS sales_dense_rank
FROM sales
GROUP BY product_id;

-- ROLLUP: Generates subtotal and grand total rows in result sets, providing hierarchical summaries across specified columns.
-- CUBE: Creates comprehensive summaries by generating subtotals and grand totals across all combinations of specified columns, facilitating multidimensional analysis.
-- FIRST and LAST: Retrieve the earliest or latest value in a sorted group, useful for identifying initial or final occurrences within a dataset.
-- RANK: Assigns a unique rank to each row based on specified column values, aiding in ranking items within a dataset such as sales figures or performance metrics.
-- DENSE_RANK: Assigns consecutive ranks without gaps, even for rows with identical values, beneficial for creating continuous ranking sequences in datasets.